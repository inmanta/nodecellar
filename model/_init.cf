"""
    Copyright 2016 Inmanta

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Contact: code@inmanta.com
"""
import mongodb
import yum
import web

entity CellarApp extends web::Application, web::ApplicationContainer:
    """
        Run the nodecellar app directly with npm start
    """
end

CellarApp nodecellar [0:] -- [0:1] mongodb::MongoDB mongo
CellarApp nodecellar [0:] -- [0:1] mongodb::ReplicaSet rplset

implementation cellarApp for CellarApp:
    self.container = self
    self.user = "nobody"
    self.group = "nobody"
    self.document_root = "/opt/nodecellar"

    yum_repo = yum::Repository(host=host, name="impera_demo", metadata_expire=10,
                               baseurl="https://ci.iminds-security.be/repos/yum/nodecellar/")
    pkg = std::Package(host=host, name="nodecellar", state="latest", requires=yum_repo)
    unit_file = std::ConfigFile(host=host, path="/etc/systemd/system/nodecellar.service", reload=true,
                                content=std::file("nodecellar/nodecellar.service"))
    cfg_file = std::ConfigFile(host=host, path="/etc/nodecellar", reload=true,
                                content=std::template("nodecellar/nodecellar.tmpl"))


    cron_job = std::ConfigFile(host=host, path="/etc/cron.d/nodecellar",
                               content=std::file("nodecellar/cron"), requires=service)

    service = std::Service(host=host, name="nodecellar", state="running", onboot=true,
                 requires=[unit_file, pkg, cfg_file])
end

implement CellarApp using cellarApp
